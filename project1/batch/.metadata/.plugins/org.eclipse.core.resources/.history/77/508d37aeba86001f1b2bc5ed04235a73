package com.ss.batch.repository;

import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.when;

import java.time.LocalDateTime;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;

import com.ss.batch.entity.BulkPassEntity;
import com.ss.batch.entity.BulkPassStatus;
import com.ss.batch.entity.UserGroupMappingEntity;
import com.ss.batch.job.pass.AddPassesTasklet;

// @ExtendWith()
public class AddPassTaskletTest {
	// Spring batch
	// 배치 작업의 각 단계에서 얼마나 많은 작업을 했는지, 어떤 처리가 성공했는지 등을 기록하는 라이브러리
	@Mock
	private StepContribution stepContribution;
	
	@Mock
	private ChunkContext chunkContext;
	
	// DB
	@Mock
	private PassRepository passRepository;
	
	@Mock
	private BulkPassRepository bulkPassRepository;
	
	@Mock
	private UserGroupMappingRepository groupRepo;
	
	@InjectMocks
	private AddPassesTasklet addPassesTasklet;
	
	@Test
	public void test_execute() {
		// given
		String userGroupId = "GROUP";
		String userId = "A1000000";
		Integer count = 10;
		
		LocalDateTime now = LocalDateTime.now();
		BulkPassEntity bulkPassEntity = new BulkPassEntity();
		
		bulkPassEntity.setPackageSeq(1L);
		bulkPassEntity.setUserGroupId(userGroupId);
		bulkPassEntity.setStatus(BulkPassStatus.READY);
		bulkPassEntity.setStartedAt(now.minusDays(60));
		bulkPassEntity.setCount(count);
		
		// 대량의 이용권을 발급
		// 어떤 그룹에 속한 사용자한테 보낼지 저장
		UserGroupMappingEntity userGroupEntity = new UserGroupMappingEntity();
		userGroupEntity.setUserGroupId(userGroupId);
		userGroupEntity.setUserId(userId);
		
		// when
		when(bulkPassRepository.findByStatusAndStartedAtGreaterThan(null, now));
		// 그룹에 속한 그룹 ID에 사용자 찾기
		// eq("GROUP") 만약 일치가 되지 않으면 검색 안함
		// 			   만약 일치하면 데이터 검색하도록 설정
		// when() : 검색을 했을 때 데이터가 있으면 그 데이터를 thenReturn() 메서드로 전달한다.
		when(groupRepo.findByUserGroupId(eq("GROUP"))).thenReturn(List.of());
		
		// then
		
	}
}
